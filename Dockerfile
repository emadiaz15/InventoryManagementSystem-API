# 游냀 Usar una imagen ligera de Python 3.10
FROM python:3.10-slim

# 游늭 Establecer el directorio de trabajo en el contenedor
WORKDIR /app

# 游닍 Copiar solo el archivo de dependencias primero (para aprovechar la cach칠)
COPY requirements.txt /app/

# 游닌 Instalar las dependencias de Python
RUN pip install --no-cache-dir -r requirements.txt

# 游댠 Copiar el resto del c칩digo del proyecto Django al contenedor
COPY . /app/

# === INICIO: A침adido para Entrypoint y Migraciones ===

# Copiar el script de entrypoint
COPY entrypoint.sh /app/entrypoint.sh

# Dar permisos de ejecuci칩n al script
RUN chmod +x /app/entrypoint.sh

# Establecer el entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# === FIN: A침adido para Entrypoint y Migraciones ===

# Establecer las variables de entorno para Django
ENV PYTHONUNBUFFERED 1

# Exponer el puerto donde correr치 el servidor (usamos la variable de entorno $PORT)
EXPOSE $PORT

# Iniciar el servidor de Django con Gunicorn (usando el puerto din치mico de Railway)
CMD exec gunicorn inventory_management.wsgi:application
